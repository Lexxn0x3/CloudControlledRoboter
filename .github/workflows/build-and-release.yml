name: Build and Release Binaries

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write
  
jobs:
  build-rust:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true

      - name: Create custom target directory
        run: mkdir -p build/release

      - name: Build Rust Binary
        run: RUSTFLAGS='-C target-feature=+crt-static' cargo build --release --manifest-path TcpBroker/Broker/Cargo.toml --target x86_64-unknown-linux-gnu --target-dir ./build/release/

      - name: Upload Rust Binary as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: rust-binary
          path: build/release/x86_64-unknown-linux-gnu/release/Broker
          
      - name: List contents of the release directory
        run: ls -R build/release
          
  build-go:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.x'
      
      - name: Build Go Binary
        run: |
          GOOS=linux GOARCH=arm64 go build -o mainsendergo
        working-directory: mainsendergo

      - name: Upload Go Binary as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: mainsendergo
          path: mainsendergo/mainsendergo
  create-release:
    needs: [build-rust, build-go]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
    
      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: Set execute permission for the script
        run: chmod +x ./tagnew.sh
        
      - name: Run Tagging Script
        id: create_tag
        run: ./tagnew.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}  # replace with your secret name
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          release_name: Release ${{ steps.create_tag.outputs.tag }}
          draft: false
          prerelease: false
          
      - name: Upload Rust Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./rust-binary/Broker
          asset_name: Broker
          asset_content_type: application/octet-stream

      - name: Upload Go Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mainsendergo/mainsendergo
          asset_name: mainsendergo
          asset_content_type: application/octet-stream
