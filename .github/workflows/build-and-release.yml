name: Build and Release

on:
  push:
    branches:
      - main
    paths:
      - 'broker/**'
      - 'mainsendergo/**'
      - 'mainsenderservergo/**'

permissions:
  contents: write
  packages: write

jobs:
  changes:
    outputs:
      rust: ${{ steps.filter.outputs.rust }}
      mainsendergo: ${{ steps.filter.outputs.mainsendergo }}
      mainsenderservergo: ${{ steps.filter.outputs.mainsenderservergo }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            rust:
              - 'broker/**'
            mainsendergo:
              - 'mainsendergo/**'
            mainsenderservergo:
              - 'mainsenderservergo/**'

  build-rust:
    needs: changes
    if: ${{ needs.changes.outputs.rust == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: repository

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true

      - name: Build Rust Binary
        run: |
          mkdir -p build
          RUSTFLAGS='-C target-feature=+crt-static' cargo build --release --manifest-path repository/broker/Cargo.toml --target x86_64-unknown-linux-gnu --target-dir build/


      - name: Upload Rust to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rust-binary
          path: ./build/x86_64-unknown-linux-gnu/release/broker
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

  build-mainsendergo:
    needs: changes
    if: ${{ needs.changes.outputs.mainsendergo == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: repository

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.x'

      - name: Build Go Binary 1
        run: |
          cd repository/mainsendergo
          mkdir -p ../../build
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o ../../build/mainsendergo

      - name: Upload mainsendergo to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mainsendergo
          path: ./build/mainsendergo
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

  build-mainsenderservergo:
    needs: changes
    if: ${{ needs.changes.outputs.mainsenderservergo == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: repository

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.x'

      - name: Build Go Binary 2
        run: |
          cd repository/mainsenderservergo
          mkdir -p ../../build
          CGO_ENABLED=0 GOOS=linux go build -o ../../build/mainsenderservergo

      - name: Upload mainsenderservergo to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mainsenderservergo
          path: ./build/mainsenderservergo
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

  prepare-binaries-for-release:
    needs: [build-rust, build-mainsendergo, build-mainsenderservergo]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout binaries branch
        uses: actions/checkout@v4
        with:
          ref: binaries-branch

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts/

      - name: Commit and Push Binary
        run: |
          git config --global user.email "mattzi@users.noreply.github.com"
          git config --global user.name "Binary Builder"
          ls -R
          if [ -f "./artifacts/mainsendergo/mainsendergo" ]; then
              echo "File exists."
              rm ./build/mainsendergo
              mv ./artifacts/mainsendergo/mainsendergo ./build/mainsendergo
              git add ./build/mainsendergo
          fi
          if [ -f "./artifacts/mainsenderservergo/mainsenderservergo" ]; then
              echo "File exists."
              rm ./build/mainsenderservergo
              mv ./artifacts/mainsenderservergo/mainsenderservergo ./build/mainsenderservergo
              git add ./build/mainsenderservergo
          fi
          if [ -f "./artifacts/rust-binary/broker" ]; then
              echo "File exists."
              rm ./build/broker
              mv ./artifacts/rust-binary/broker ./build/broker
              git add ./build/broker
          fi
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update mainsenderservergo binary"
            git push -u origin binaries-branch
          fi

      - name: Set execute permission for the script
        run: chmod +x ./tagnew.sh
        
      - name: Run Tagging Script
        id: create_tag
        run: ./tagnew.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.MY_PAT }}
          tag_name: ${{ steps.create_tag.outputs.tag }}
          files: |
            ./build/broker
            ./build/mainsendergo
            ./build/mainsenderservergo
